{"version":3,"file":"nc-vue_dist_Components_NcDateTimePickerNative_mjs-nc-vue_dist_Components_NcDateTimePickerNative_mjs.js?v=b184c91551ad430db848","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrsources":["webpack:///nextcloud/../nc-vue/dist/assets/NcDateTimePickerNative-BAcKr0B3.css","webpack://nextcloud/../nc-vue/dist/assets/NcDateTimePickerNative-BAcKr0B3.css?84c8","webpack:///nextcloud/../nc-vue/dist/Components/NcDateTimePickerNative.mjs"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../server/node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../server/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n/*\n* Ensure proper alignment of the vue material icons\n*/\n.material-design-icon[data-v-fbe2ff4a] {\n  display: flex;\n  align-self: center;\n  justify-self: center;\n  align-items: center;\n  justify-content: center;\n}\n.native-datetime-picker[data-v-fbe2ff4a] {\n  display: flex;\n  flex-direction: column;\n}\n.native-datetime-picker .native-datetime-picker--input[data-v-fbe2ff4a] {\n  width: 100%;\n  flex: 0 0 auto;\n  padding-right: 4px;\n}\n[data-theme-light] .native-datetime-picker--input[data-v-fbe2ff4a],\n[data-themes*=light] .native-datetime-picker--input[data-v-fbe2ff4a] {\n  color-scheme: light;\n}\n[data-theme-dark] .native-datetime-picker--input[data-v-fbe2ff4a],\n[data-themes*=dark] .native-datetime-picker--input[data-v-fbe2ff4a] {\n  color-scheme: dark;\n}\n@media (prefers-color-scheme: light) {\n[data-theme-default] .native-datetime-picker--input[data-v-fbe2ff4a],\n  [data-themes*=default] .native-datetime-picker--input[data-v-fbe2ff4a] {\n    color-scheme: light;\n}\n}\n@media (prefers-color-scheme: dark) {\n[data-theme-default] .native-datetime-picker--input[data-v-fbe2ff4a],\n  [data-themes*=default] .native-datetime-picker--input[data-v-fbe2ff4a] {\n    color-scheme: dark;\n}\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../server/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../server/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../server/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../server/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../server/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../server/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../server/node_modules/css-loader/dist/cjs.js!./NcDateTimePickerNative-BAcKr0B3.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../server/node_modules/css-loader/dist/cjs.js!./NcDateTimePickerNative-BAcKr0B3.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import '../assets/NcDateTimePickerNative-BAcKr0B3.css';\nimport { n as normalizeComponent } from \"../chunks/_plugin-vue2_normalizer-D637Qkok.mjs\";\nimport { S as ScopeComponent } from \"../chunks/ScopeComponent-C0xOBUg-.mjs\";\nconst inputDateTypes = [\"date\", \"datetime-local\", \"month\", \"time\", \"week\"];\nconst _sfc_main = {\n  name: \"NcDateTimePickerNative\",\n  inheritAttrs: false,\n  props: {\n    /**\n     * The date is – like the `Date` object in JavaScript – tied to UTC.\n     * The selected time zone does not have an influence of the selected time and date value.\n     * You have to translate the time yourself when you want to factor in time zones.\n     * Pass null to clear the input field.\n     */\n    value: {\n      type: Date,\n      default: null\n    },\n    /**\n     * id attribute of the input field\n     */\n    id: {\n      type: String,\n      required: true\n    },\n    /**\n     * type attribute of the input field\n     * default type: String\n     * The type of the input element, it can be `date`, `datetime-local`, `month`, `time`, `week`\n     */\n    type: {\n      type: String,\n      default: \"date\",\n      validate: (name) => inputDateTypes.includes(name)\n    },\n    /**\n     * text inside the label element\n     * default type: String\n     */\n    label: {\n      type: String,\n      default: \"Please choose a date\"\n    },\n    /**\n     * min attribute of the input field\n     * default type: null\n     */\n    min: {\n      type: [Date, Boolean],\n      default: null\n    },\n    /**\n     * max attribute of the input field\n     * default type: null\n     */\n    max: {\n      type: [Date, Boolean],\n      default: null\n    },\n    /**\n     * Flag to hide the label\n     * default type: String\n     * The hidden input label for accessibility purposes.\n     */\n    hideLabel: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Class to add to the input field.\n     * Necessary to use NcDateTimePickerNative in the NcActionInput component.\n     */\n    inputClass: {\n      type: [Object, String],\n      default: \"\"\n    }\n  },\n  emits: [\n    \"input\"\n  ],\n  computed: {\n    formattedValue() {\n      return this.formatValue(this.value);\n    },\n    formattedMin() {\n      if (this.min) {\n        return this.formatValue(this.min);\n      }\n      return false;\n    },\n    formattedMax() {\n      if (this.max) {\n        return this.formatValue(this.max);\n      }\n      return false;\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        /**\n         * Handle the input event\n         *\n         * @param {InputEvent} $event input event payload\n         * @return {Date|string} new chosen Date() or an empty string\n         */\n        input: ($event) => {\n          if (isNaN($event.target.valueAsNumber)) {\n            return this.$emit(\"input\", null);\n          }\n          if (this.type === \"time\") {\n            const time = $event.target.value;\n            if (this.value === \"\") {\n              const { yyyy: yyyy2, MM: MM2, dd: dd2 } = this.getReadableDate(/* @__PURE__ */ new Date());\n              return this.$emit(\"input\", new Date(\"\".concat(yyyy2, \"-\").concat(MM2, \"-\").concat(dd2, \"T\").concat(time)));\n            }\n            const { yyyy, MM, dd } = this.getReadableDate(this.value);\n            return this.$emit(\"input\", new Date(\"\".concat(yyyy, \"-\").concat(MM, \"-\").concat(dd, \"T\").concat(time)));\n          } else if (this.type === \"month\") {\n            const MM = (new Date($event.target.value).getMonth() + 1).toString().padStart(2, \"0\");\n            if (this.value === \"\") {\n              const { yyyy: yyyy2, dd: dd2, hh: hh2, mm: mm2 } = this.getReadableDate(/* @__PURE__ */ new Date());\n              return this.$emit(\"input\", new Date(\"\".concat(yyyy2, \"-\").concat(MM, \"-\").concat(dd2, \"T\").concat(hh2, \":\").concat(mm2)));\n            }\n            const { yyyy, dd, hh, mm } = this.getReadableDate(this.value);\n            return this.$emit(\"input\", new Date(\"\".concat(yyyy, \"-\").concat(MM, \"-\").concat(dd, \"T\").concat(hh, \":\").concat(mm)));\n          }\n          const timezoneOffsetSeconds = new Date($event.target.valueAsNumber).getTimezoneOffset() * 1e3 * 60;\n          const inputDateWithTimezone = $event.target.valueAsNumber + timezoneOffsetSeconds;\n          return this.$emit(\"input\", new Date(inputDateWithTimezone));\n        }\n      };\n    }\n  },\n  methods: {\n    /**\n     * Returns Object with string values of a Date\n     *\n     * @param {Date} value The selected value\n     * @return {object|undefined}\n     */\n    getReadableDate(value) {\n      if (value instanceof Date) {\n        const yyyy = value.getFullYear().toString().padStart(4, \"0\");\n        const MM = (value.getMonth() + 1).toString().padStart(2, \"0\");\n        const dd = value.getDate().toString().padStart(2, \"0\");\n        const hh = value.getHours().toString().padStart(2, \"0\");\n        const mm = value.getMinutes().toString().padStart(2, \"0\");\n        return { yyyy, MM, dd, hh, mm };\n      }\n    },\n    /**\n     * Returns preformatted value for the input field\n     *\n     * @param {Date} value The selected value\n     * @return {string|undefined}\n     */\n    formatValue(value) {\n      if (value instanceof Date) {\n        const { yyyy, MM, dd, hh, mm } = this.getReadableDate(value);\n        if (this.type === \"datetime-local\") {\n          return \"\".concat(yyyy, \"-\").concat(MM, \"-\").concat(dd, \"T\").concat(hh, \":\").concat(mm);\n        } else if (this.type === \"date\") {\n          return \"\".concat(yyyy, \"-\").concat(MM, \"-\").concat(dd);\n        } else if (this.type === \"month\") {\n          return \"\".concat(yyyy, \"-\").concat(MM);\n        } else if (this.type === \"time\") {\n          return \"\".concat(hh, \":\").concat(mm);\n        } else if (this.type === \"week\") {\n          const startDate = new Date(yyyy, 0, 1);\n          const daysSinceBeginningOfYear = Math.floor((value - startDate) / (24 * 60 * 60 * 1e3));\n          const weekNumber = Math.ceil(daysSinceBeginningOfYear / 7);\n          return \"\".concat(yyyy, \"-W\").concat(weekNumber);\n        }\n      } else {\n        return \"\";\n      }\n    }\n  }\n};\nvar _sfc_render = function render() {\n  var _vm = this, _c = _vm._self._c;\n  return _c(\"div\", { staticClass: \"native-datetime-picker\" }, [_c(\"label\", { class: { \"hidden-visually\": _vm.hideLabel }, attrs: { \"for\": _vm.id } }, [_vm._v(_vm._s(_vm.label))]), _c(\"input\", _vm._g(_vm._b({ staticClass: \"native-datetime-picker--input\", class: _vm.inputClass, attrs: { \"id\": _vm.id, \"type\": _vm.type, \"min\": _vm.formattedMin, \"max\": _vm.formattedMax }, domProps: { \"value\": _vm.formattedValue } }, \"input\", _vm.$attrs, false), _vm.listeners))]);\n};\nvar _sfc_staticRenderFns = [];\nvar __component__ = /* @__PURE__ */ normalizeComponent(\n  _sfc_main,\n  _sfc_render,\n  _sfc_staticRenderFns,\n  false,\n  null,\n  \"fbe2ff4a\",\n  null,\n  null\n);\nconst NcDateTimePickerNative = __component__.exports;\nScopeComponent(NcDateTimePickerNative);\nexport {\n  NcDateTimePickerNative as default\n};\n"],"names":[],"sourceRoot":""}